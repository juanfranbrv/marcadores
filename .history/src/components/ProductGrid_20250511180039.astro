---
import { ExternalLink } from 'lucide-react';
import { Product } from '../types/product';
import { useState, useEffect } from 'react';

const [products, setProducts] = useState<Product[]>([]);
const [accessToken, setAccessToken] = useState('');
const [loading, setLoading] = useState(false);
const [error, setError] = useState('');

useEffect(() => {
  if (!accessToken) return;
  setLoading(true);
  setError('');
  fetch('/api/raindrop/', {
    headers: { Authorization: `Bearer ${accessToken}` },
  })
    .then(res => res.json())
    .then(data => {
      setProducts((data.items || []).map((raindrop) => ({
        id: String(raindrop._id),
        title: raindrop.title || raindrop.link,
        description: raindrop.excerpt || '',
        image: raindrop.cover || '/placeholder.png',
        tags: raindrop.tags || [],
        isPaid: false,
        url: raindrop.link,
      })));
    })
    .catch(() => setError('No se pudieron obtener los marcadores'))
    .finally(() => setLoading(false));
}, [accessToken]);
---

{!accessToken ? (
  <div class="max-w-md mx-auto mt-10 p-6 bg-white border rounded shadow">
    <h2 class="text-lg font-bold mb-2">Introduce tu Access Token de Raindrop.io</h2>
    <input
      type="text"
      class="w-full border px-3 py-2 rounded mb-2"
      placeholder="Access Token"
      value={accessToken}
      onInput={e => setAccessToken(e.target.value)}
    />
    <p class="text-xs text-gray-500 mb-2">Puedes obtenerlo tras autenticarte con OAuth2 o desde la web de Raindrop.io.</p>
  </div>
) : loading ? (
  <div class="text-center py-10">Cargando marcadores...</div>
) : error ? (
  <div class="text-red-500 text-center mt-10">{error}</div>
) : (
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
    {products.map((product) => (
      <div class="bg-white rounded-lg border overflow-hidden">
        <div class="relative h-48 overflow-hidden">
          <img
            src={product.image || "/placeholder.png"}
            alt={product.title}
            class="object-cover w-full h-full"
          />
        </div>
        <div class="p-4">
          <h2 class="text-xl font-semibold mb-2">{product.title}</h2>
          <p class="text-gray-600 text-sm mb-4 line-clamp-3">{product.description}</p>
          <div class="flex flex-wrap gap-1 mb-4">
            {product.tags.map((tag) => (
              <span class="text-xs bg-gray-100 px-2 py-1 rounded-md text-gray-600">#{tag.replace(/\s+/g, "")}</span>
            ))}
          </div>
          <div class="flex justify-between items-center">
            <div class="flex items-center">
              {product.isPaid ? (
                <span class="text-sm font-medium">Paid</span>
              ) : (
                <span class="text-sm font-medium">Free</span>
              )}
            </div>
            <a
              href={product.url}
              target="_blank"
              rel="noopener noreferrer"
              class="text-gray-600 hover:text-gray-900 flex items-center gap-1 text-sm"
            >
              Visit <ExternalLink class="h-3 w-3" />
            </a>
          </div>
        </div>
      </div>
    ))}
  </div>
)}
