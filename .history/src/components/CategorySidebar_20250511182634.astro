<aside id="sidebar-raindrop" class="w-64 border-r bg-gray-50 p-4 hidden md:block">
  <div id="sidebar-content"></div>
</aside>

<script type="module">
const sidebarContent = document.getElementById('sidebar-content');

function renderTokenForm() {
  if (!sidebarContent) return;
  sidebarContent.innerHTML = `
    <div class="max-w-md mx-auto mt-10 p-6 bg-white border rounded shadow">
      <h2 class="text-lg font-bold mb-2">Introduce tu Access Token de Raindrop.io</h2>
      <input type="text" id="raindrop-token-input" class="w-full border px-3 py-2 rounded mb-2" placeholder="Access Token" />
      <p class="text-xs text-gray-500 mb-2">Puedes obtenerlo tras autenticarte con OAuth2 o desde la web de Raindrop.io.</p>
    </div>
  `;
  const input = document.getElementById('raindrop-token-input');
  if (input) {
    input.addEventListener('change', e => {
      const value = e.target && e.target.value ? e.target.value : '';
      localStorage.setItem('raindrop_access_token', value);
      renderSidebar();
    });
  }
}

async function renderSidebar() {
  if (!sidebarContent) return;
  const token = localStorage.getItem('raindrop_access_token') || '';
  if (!token) {
    renderTokenForm();
    return;
  }
  sidebarContent.innerHTML = '<div class="text-center py-10">Cargando categorías y etiquetas...</div>';
  try {
    const [collectionsRes, tagsRes] = await Promise.all([
      fetch('/api/raindrop/collections', { headers: { Authorization: `Bearer ${token}` } }),
      fetch('/api/raindrop/tags', { headers: { Authorization: `Bearer ${token}` } })
    ]);
    const collections = [{ _id: 0, title: 'Todas' }, ...((await collectionsRes.json()) || [])];
    const tags = ['Todas', ...((await tagsRes.json()) || [])];
    sidebarContent.innerHTML = `
      <div class="space-y-6">
        <div>
          <h3 class="text-xs font-semibold text-gray-500 uppercase tracking-wider mb-3">PRODUCT CATEGORIES</h3>
          <div class="space-y-1">
            ${collections.map(col => `
              <a href="${col._id === 0 ? '/' : `/category/${col._id}`}" class="flex items-center gap-2 w-full px-3 py-2 text-sm font-medium rounded-md ${window.location.pathname === `/category/${col._id}` || (col._id === 0 && window.location.pathname === '/') ? 'bg-indigo-600 text-white' : 'text-gray-700 hover:bg-gray-200'}">
                <span class="text-gray-400">#</span> ${col.title}
              </a>
            `).join('')}
          </div>
        </div>
        <div>
          <h3 class="text-xs font-semibold text-gray-500 uppercase tracking-wider mb-3">#TAGS</h3>
          <div class="space-y-1">
            ${tags.map(tag => `
              <a href="${tag === 'Todas' ? (window.location.pathname.startsWith('/category/') ? `/category/${window.location.pathname.split('/')[2]}` : '/') : (window.location.pathname.startsWith('/category/') ? `/category/${window.location.pathname.split('/')[2]}/tag/${tag}` : `/tag/${tag}`)}" class="flex items-center gap-1 w-full px-3 py-2 text-sm font-medium rounded-md ${(window.location.pathname === `/tag/${tag}` || window.location.pathname === `/category/${window.location.pathname.split('/')[2]}/tag/${tag}` || (tag === 'Todas' && (window.location.pathname === '/' || (/\/category\/[^/]+$/.test(window.location.pathname) && !/\/tag\//.test(window.location.pathname))))) ? 'bg-white border shadow-sm' : 'text-gray-700 hover:bg-gray-200'}">
                <span class="text-gray-400">#</span> ${tag}
              </a>
            `).join('')}
          </div>
        </div>
      </div>
    `;
  } catch (e) {
    sidebarContent.innerHTML = '<div class="text-red-500 text-center mt-10">Error al cargar categorías o etiquetas</div>';
  }
}

renderSidebar();
</script>
