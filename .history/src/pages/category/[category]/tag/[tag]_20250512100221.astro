---
import Layout from '../../../../layouts/Layout.astro';
import ProductGrid from '../../../../components/ProductGrid.astro';
import CategorySidebar from '../../../../components/CategorySidebar.astro';
import { fetchBookmarksByCollectionAndTag, fetchTags, fetchCollections } from '../../../../lib/api';

export async function getStaticPaths() {
  const tags = await fetchTags();
  const collections = await fetchCollections();
  
  const paths: { params: { category: string; tag: string } }[] = [];
  
  // Añadir 'todas' como una opción
  const allCategories = ['todas', ...collections.map(col => col.title)];
  
  for (const category of allCategories) {
    for (const tag of tags) {
      paths.push({ 
        params: { 
          category: String(category).toLowerCase(), 
          tag: String(tag.name).toLowerCase() 
        } 
      });
    }
    paths.push({ 
      params: { 
        category: String(category).toLowerCase(), 
        tag: 'todas' 
      } 
    });
  }
  return paths;
}

const { category, tag } = Astro.params as { category: string; tag: string };
const bookmarks = await fetchBookmarksByCollectionAndTag(category, tag);
const collections = await fetchCollections();
const categories = [
  { id: "todas", name: "Todas", icon: null },
  ...collections.map(col => ({
    id: col.title.toLowerCase(),
    name: col.title,
    icon: col.icon
  }))
];
const categoryName = (category || '').charAt(0).toUpperCase() + (category || '').slice(1);
const title = `${categoryName}${tag ? ` #${tag.charAt(0).toUpperCase() + tag.slice(1)}` : ''}`;
---

<Layout title={title}>
  <div class="flex flex-1">
    <CategorySidebar />
    <main class="flex-1 p-6">
      <div class="max-w-7xl mx-auto">
        <div class="flex items-center gap-3 mb-6">
          <div class="bg-indigo-100 text-indigo-600 p-2 rounded">
            {Astro.params?.category && Astro.params.category !== 'todas' && categories.find(c => c.id === Astro.params.category && c.icon) ? (
              <img src={categories.find(c => c.id === Astro.params.category).icon} width="24" height="24" class="h-6 w-6 object-cover" alt="Icono categoría" />
            ) : (
              <svg viewBox="0 0 24 24" width="24" height="24" stroke="currentColor" stroke-width="2" fill="none">
                <rect x="2" y="7" width="20" height="14" rx="2" ry="2" />
                <path d="M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16" />
              </svg>
            )}
          </div>
          <h1 class="text-2xl font-bold">
            {categoryName}{tag ? ` #${tag.charAt(0).toUpperCase() + tag.slice(1)}` : ''}
          </h1>
        </div>
        <ProductGrid products={bookmarks} />
      </div>
    </main>
  </div>
</Layout>
